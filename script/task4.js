let x=false && true || true;
console.log(x);
//будет выводиться true так как сначало выполняется логическая операция И(будет получен результат false.Потому что И возвращает ложное значение)
// Дальще идет сравнение полученого false ИЛИ true.ТАк как ИЛИ ищет верное значение нам верентся true
let y=false && (true || true);
console.log(y);
//будет резульат false.Так как по приоритету сначало будет идти значение которое в скобках.Результат в скобках будет true
//Дальше идет false && true.Так как && ищет вернет первое ложное значение.
let z=+'40' + +'2';;
console.log(z);
// Будет выводиться 42.Так как +"40"-преобразуется в число.аналогично с + "2".
let a='2' + 3 ** 2;
console.log(a ,typeof a);
//Будет выводиться 29.Сначало будет возведение 3 во вторую степень=9.Далее будет сложение при помощи бинарного +
let b=3 ** 2 / 3;
console.log(b);
//Будет 3.3 во второй степени=9.9 поделить на 3=3
let v=3 ** (9 / 3);
console.log(v);
//Будет 27.Сначало 9 поделиться на 3=3.Далее 3 возведется в 3 степень=27
let g='10' + (5 === 6);
console.log(g);
// будет 10false.Сначало произойдет операция сравнение,так как 5 не равно 6 будет false.Ну а потом сложение про помощи бинарного +
//let q='10' — 5 === 6;
//console.log(q);
//Неверный синтаксис
let h=(+null == false)<1
console.log(h);
//будет false.в скобках будет значение 1.Так как 1=1 будет false
let j=(+null == false) < 1 ** 5;
console.log(j);
//будет false.Аналогично как и с примером выше. 1 в пятой степени все равно даст 1
let number = 5;
2 * ++number;
2 * number --;
console.log(number);
//Будет 5
